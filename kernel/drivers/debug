
./libhal.a:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <set_intr_gate>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	89 7d ec             	mov    %edi,-0x14(%rbp)
   b:	89 f0                	mov    %esi,%eax
   d:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  11:	88 45 e8             	mov    %al,-0x18(%rbp)
  14:	8b 45 ec             	mov    -0x14(%rbp),%eax
  17:	48 c1 e0 04          	shl    $0x4,%rax
  1b:	48 89 c2             	mov    %rax,%rdx
  1e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  25:	00 00 00 
  28:	48 01 d0             	add    %rdx,%rax
  2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  3b:	89 c2                	mov    %eax,%edx
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	66 89 10             	mov    %dx,(%rax)
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	66 c7 40 02 28 00    	movw   $0x28,0x2(%rax)
  4e:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
  52:	83 e0 07             	and    $0x7,%eax
  55:	89 c2                	mov    %eax,%edx
  57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5b:	88 50 04             	mov    %dl,0x4(%rax)
  5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  62:	c6 40 05 8e          	movb   $0x8e,0x5(%rax)
  66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6a:	48 c1 e8 10          	shr    $0x10,%rax
  6e:	89 c2                	mov    %eax,%edx
  70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  74:	66 89 50 06          	mov    %dx,0x6(%rax)
  78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7c:	48 c1 e8 20          	shr    $0x20,%rax
  80:	89 c2                	mov    %eax,%edx
  82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  86:	89 50 08             	mov    %edx,0x8(%rax)
  89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
  94:	90                   	nop
  95:	c9                   	leave
  96:	c3                   	ret

0000000000000097 <set_tss64>:
  97:	55                   	push   %rbp
  98:	48 89 e5             	mov    %rsp,%rbp
  9b:	48 83 ec 30          	sub    $0x30,%rsp
  9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  ab:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  af:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  b3:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  b7:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  be:	00 00 00 
  c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c5:	48 89 02             	mov    %rax,(%rdx)
  c8:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  cf:	00 00 00 
  d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  d6:	48 89 02             	mov    %rax,(%rdx)
  d9:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  e0:	00 00 00 
  e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e7:	48 89 02             	mov    %rax,(%rdx)
  ea:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  f1:	00 00 00 
  f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  f8:	48 89 02             	mov    %rax,(%rdx)
  fb:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 102:	00 00 00 
 105:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 109:	48 89 02             	mov    %rax,(%rdx)
 10c:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 113:	00 00 00 
 116:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 11a:	48 89 02             	mov    %rax,(%rdx)
 11d:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 124:	00 00 00 
 127:	48 8b 45 10          	mov    0x10(%rbp),%rax
 12b:	48 89 02             	mov    %rax,(%rdx)
 12e:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 135:	00 00 00 
 138:	48 8b 45 18          	mov    0x18(%rbp),%rax
 13c:	48 89 02             	mov    %rax,(%rdx)
 13f:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 146:	00 00 00 
 149:	48 8b 45 20          	mov    0x20(%rbp),%rax
 14d:	48 89 02             	mov    %rax,(%rdx)
 150:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 157:	00 00 00 
 15a:	48 8b 45 28          	mov    0x28(%rbp),%rax
 15e:	48 89 02             	mov    %rax,(%rdx)
 161:	90                   	nop
 162:	c9                   	leave
 163:	c3                   	ret

0000000000000164 <default_irq_handler>:
 164:	55                   	push   %rbp
 165:	48 89 e5             	mov    %rsp,%rbp
 168:	41 53                	push   %r11
 16a:	41 52                	push   %r10
 16c:	41 51                	push   %r9
 16e:	41 50                	push   %r8
 170:	57                   	push   %rdi
 171:	56                   	push   %rsi
 172:	53                   	push   %rbx
 173:	51                   	push   %rcx
 174:	52                   	push   %rdx
 175:	50                   	push   %rax
 176:	48 83 ec 10          	sub    $0x10,%rsp
 17a:	48 8d 45 08          	lea    0x8(%rbp),%rax
 17e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 182:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 189:	00 00 00 
 18c:	48 89 c7             	mov    %rax,%rdi
 18f:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
 196:	00 00 00 
 199:	fc                   	cld
 19a:	ff d3                	call   *%rbx
 19c:	90                   	nop
 19d:	48 83 c4 10          	add    $0x10,%rsp
 1a1:	58                   	pop    %rax
 1a2:	5a                   	pop    %rdx
 1a3:	59                   	pop    %rcx
 1a4:	5b                   	pop    %rbx
 1a5:	5e                   	pop    %rsi
 1a6:	5f                   	pop    %rdi
 1a7:	41 58                	pop    %r8
 1a9:	41 59                	pop    %r9
 1ab:	41 5a                	pop    %r10
 1ad:	41 5b                	pop    %r11
 1af:	5d                   	pop    %rbp
 1b0:	48 cf                	iretq

00000000000001b2 <divide_error_handler>:
 1b2:	55                   	push   %rbp
 1b3:	48 89 e5             	mov    %rsp,%rbp
 1b6:	41 53                	push   %r11
 1b8:	41 52                	push   %r10
 1ba:	41 51                	push   %r9
 1bc:	41 50                	push   %r8
 1be:	57                   	push   %rdi
 1bf:	56                   	push   %rsi
 1c0:	53                   	push   %rbx
 1c1:	51                   	push   %rcx
 1c2:	52                   	push   %rdx
 1c3:	50                   	push   %rax
 1c4:	48 83 ec 10          	sub    $0x10,%rsp
 1c8:	48 8d 45 08          	lea    0x8(%rbp),%rax
 1cc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 1d0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 1d7:	00 00 00 
 1da:	48 89 c7             	mov    %rax,%rdi
 1dd:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
 1e4:	00 00 00 
 1e7:	fc                   	cld
 1e8:	ff d3                	call   *%rbx
 1ea:	90                   	nop
 1eb:	48 83 c4 10          	add    $0x10,%rsp
 1ef:	58                   	pop    %rax
 1f0:	5a                   	pop    %rdx
 1f1:	59                   	pop    %rcx
 1f2:	5b                   	pop    %rbx
 1f3:	5e                   	pop    %rsi
 1f4:	5f                   	pop    %rdi
 1f5:	41 58                	pop    %r8
 1f7:	41 59                	pop    %r9
 1f9:	41 5a                	pop    %r10
 1fb:	41 5b                	pop    %r11
 1fd:	5d                   	pop    %rbp
 1fe:	48 cf                	iretq

0000000000000200 <double_fault_handler>:
 200:	55                   	push   %rbp
 201:	48 89 e5             	mov    %rsp,%rbp
 204:	41 53                	push   %r11
 206:	41 52                	push   %r10
 208:	41 51                	push   %r9
 20a:	41 50                	push   %r8
 20c:	57                   	push   %rdi
 20d:	56                   	push   %rsi
 20e:	53                   	push   %rbx
 20f:	51                   	push   %rcx
 210:	52                   	push   %rdx
 211:	50                   	push   %rax
 212:	48 83 ec 10          	sub    $0x10,%rsp
 216:	48 8d 45 08          	lea    0x8(%rbp),%rax
 21a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 21e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 225:	00 00 00 
 228:	48 89 c7             	mov    %rax,%rdi
 22b:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
 232:	00 00 00 
 235:	fc                   	cld
 236:	ff d3                	call   *%rbx
 238:	90                   	nop
 239:	48 83 c4 10          	add    $0x10,%rsp
 23d:	58                   	pop    %rax
 23e:	5a                   	pop    %rdx
 23f:	59                   	pop    %rcx
 240:	5b                   	pop    %rbx
 241:	5e                   	pop    %rsi
 242:	5f                   	pop    %rdi
 243:	41 58                	pop    %r8
 245:	41 59                	pop    %r9
 247:	41 5a                	pop    %r10
 249:	41 5b                	pop    %r11
 24b:	5d                   	pop    %rbp
 24c:	48 cf                	iretq

000000000000024e <page_fault_handler>:
 24e:	55                   	push   %rbp
 24f:	48 89 e5             	mov    %rsp,%rbp
 252:	41 53                	push   %r11
 254:	41 52                	push   %r10
 256:	41 51                	push   %r9
 258:	41 50                	push   %r8
 25a:	57                   	push   %rdi
 25b:	56                   	push   %rsi
 25c:	53                   	push   %rbx
 25d:	51                   	push   %rcx
 25e:	52                   	push   %rdx
 25f:	50                   	push   %rax
 260:	48 83 ec 30          	sub    $0x30,%rsp
 264:	48 8d 45 08          	lea    0x8(%rbp),%rax
 268:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 26c:	59                   	pop    %rcx
 26d:	89 45 ac             	mov    %eax,-0x54(%rbp)
 270:	0f 20 d0             	mov    %cr2,%rax
 273:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 277:	8b 45 ac             	mov    -0x54(%rbp),%eax
 27a:	83 e0 01             	and    $0x1,%eax
 27d:	85 c0                	test   %eax,%eax
 27f:	74 1c                	je     29d <page_fault_handler+0x4f>
 281:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 288:	00 00 00 
 28b:	48 89 c7             	mov    %rax,%rdi
 28e:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
 295:	00 00 00 
 298:	fc                   	cld
 299:	ff d3                	call   *%rbx
 29b:	eb 4c                	jmp    2e9 <page_fault_handler+0x9b>
 29d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 2a4:	00 00 00 
 2a7:	48 89 c7             	mov    %rax,%rdi
 2aa:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
 2b1:	00 00 00 
 2b4:	fc                   	cld
 2b5:	ff d3                	call   *%rbx
 2b7:	bf 01 00 00 00       	mov    $0x1,%edi
 2bc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 2c3:	00 00 00 
 2c6:	ff d0                	call   *%rax
 2c8:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 2cc:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
 2d0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 2d4:	ba 01 00 00 00       	mov    $0x1,%edx
 2d9:	48 89 c7             	mov    %rax,%rdi
 2dc:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
 2e3:	00 00 00 
 2e6:	ff d3                	call   *%rbx
 2e8:	90                   	nop
 2e9:	48 83 c4 30          	add    $0x30,%rsp
 2ed:	58                   	pop    %rax
 2ee:	5a                   	pop    %rdx
 2ef:	59                   	pop    %rcx
 2f0:	5b                   	pop    %rbx
 2f1:	5e                   	pop    %rsi
 2f2:	5f                   	pop    %rdi
 2f3:	41 58                	pop    %r8
 2f5:	41 59                	pop    %r9
 2f7:	41 5a                	pop    %r10
 2f9:	41 5b                	pop    %r11
 2fb:	5d                   	pop    %rbp
 2fc:	48 cf                	iretq

00000000000002fe <idt_init>:
 2fe:	55                   	push   %rbp
 2ff:	48 89 e5             	mov    %rsp,%rbp
 302:	48 83 ec 10          	sub    $0x10,%rsp
 306:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 30d:	00 00 00 
 310:	48 89 c2             	mov    %rax,%rdx
 313:	be 00 00 00 00       	mov    $0x0,%esi
 318:	bf 00 00 00 00       	mov    $0x0,%edi
 31d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 324:	00 00 00 
 327:	ff d0                	call   *%rax
 329:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 330:	00 00 00 
 333:	48 89 c2             	mov    %rax,%rdx
 336:	be 00 00 00 00       	mov    $0x0,%esi
 33b:	bf 01 00 00 00       	mov    $0x1,%edi
 340:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 347:	00 00 00 
 34a:	ff d0                	call   *%rax
 34c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 353:	00 00 00 
 356:	48 89 c2             	mov    %rax,%rdx
 359:	be 00 00 00 00       	mov    $0x0,%esi
 35e:	bf 02 00 00 00       	mov    $0x2,%edi
 363:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 36a:	00 00 00 
 36d:	ff d0                	call   *%rax
 36f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 376:	00 00 00 
 379:	48 89 c2             	mov    %rax,%rdx
 37c:	be 00 00 00 00       	mov    $0x0,%esi
 381:	bf 0e 00 00 00       	mov    $0xe,%edi
 386:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 38d:	00 00 00 
 390:	ff d0                	call   *%rax
 392:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)
 399:	eb 24                	jmp    3bf <idt_init+0xc1>
 39b:	8b 45 fc             	mov    -0x4(%rbp),%eax
 39e:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 3a5:	00 00 00 
 3a8:	be 00 00 00 00       	mov    $0x0,%esi
 3ad:	89 c7                	mov    %eax,%edi
 3af:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 3b6:	00 00 00 
 3b9:	ff d0                	call   *%rax
 3bb:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 3bf:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 3c6:	76 d3                	jbe    39b <idt_init+0x9d>
 3c8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 3cf:	00 00 00 
 3d2:	48 89 c2             	mov    %rax,%rdx
 3d5:	be 00 00 00 00       	mov    $0x0,%esi
 3da:	bf 00 00 00 00       	mov    $0x0,%edi
 3df:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 3e6:	00 00 00 
 3e9:	ff d0                	call   *%rax
 3eb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 3f2:	00 00 00 
 3f5:	48 89 c2             	mov    %rax,%rdx
 3f8:	be 00 00 00 00       	mov    $0x0,%esi
 3fd:	bf 01 00 00 00       	mov    $0x1,%edi
 402:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 409:	00 00 00 
 40c:	ff d0                	call   *%rax
 40e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 415:	00 00 00 
 418:	48 89 c2             	mov    %rax,%rdx
 41b:	be 01 00 00 00       	mov    $0x1,%esi
 420:	bf 02 00 00 00       	mov    $0x2,%edi
 425:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 42c:	00 00 00 
 42f:	ff d0                	call   *%rax
 431:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 438:	00 00 00 
 43b:	48 89 c2             	mov    %rax,%rdx
 43e:	be 01 00 00 00       	mov    $0x1,%esi
 443:	bf 08 00 00 00       	mov    $0x8,%edi
 448:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 44f:	00 00 00 
 452:	ff d0                	call   *%rax
 454:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 45b:	00 00 00 
 45e:	48 89 c2             	mov    %rax,%rdx
 461:	be 00 00 00 00       	mov    $0x0,%esi
 466:	bf 0e 00 00 00       	mov    $0xe,%edi
 46b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 472:	00 00 00 
 475:	ff d0                	call   *%rax
 477:	66 c7 45 f2 ff 0f    	movw   $0xfff,-0xe(%rbp)
 47d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 484:	00 00 00 
 487:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
 48b:	0f 01 5d f2          	lidt   -0xe(%rbp)
 48f:	90                   	nop
 490:	c9                   	leave
 491:	c3                   	ret

0000000000000492 <io_out8>:
 492:	55                   	push   %rbp
 493:	48 89 e5             	mov    %rsp,%rbp
 496:	48 83 ec 08          	sub    $0x8,%rsp
 49a:	89 fa                	mov    %edi,%edx
 49c:	89 f0                	mov    %esi,%eax
 49e:	66 89 55 fc          	mov    %dx,-0x4(%rbp)
 4a2:	88 45 f8             	mov    %al,-0x8(%rbp)
 4a5:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
 4a9:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
 4ad:	ee                   	out    %al,(%dx)
 4ae:	90                   	nop
 4af:	c9                   	leave
 4b0:	c3                   	ret

00000000000004b1 <io_in8>:
 4b1:	55                   	push   %rbp
 4b2:	48 89 e5             	mov    %rsp,%rbp
 4b5:	48 83 ec 18          	sub    $0x18,%rsp
 4b9:	89 f8                	mov    %edi,%eax
 4bb:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
 4bf:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
 4c3:	89 c2                	mov    %eax,%edx
 4c5:	ec                   	in     (%dx),%al
 4c6:	88 45 ff             	mov    %al,-0x1(%rbp)
 4c9:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 4cd:	c9                   	leave
 4ce:	c3                   	ret

00000000000004cf <io_printf>:
 4cf:	55                   	push   %rbp
 4d0:	48 89 e5             	mov    %rsp,%rbp
 4d3:	48 83 ec 20          	sub    $0x20,%rsp
 4d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 4db:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 4e2:	eb 25                	jmp    509 <io_printf+0x3a>
 4e4:	8b 45 fc             	mov    -0x4(%rbp),%eax
 4e7:	48 63 d0             	movslq %eax,%rdx
 4ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 4ee:	48 01 d0             	add    %rdx,%rax
 4f1:	0f b6 00             	movzbl (%rax),%eax
 4f4:	0f be c0             	movsbl %al,%eax
 4f7:	89 c7                	mov    %eax,%edi
 4f9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 500:	00 00 00 
 503:	ff d0                	call   *%rax
 505:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 509:	8b 45 fc             	mov    -0x4(%rbp),%eax
 50c:	48 63 d0             	movslq %eax,%rdx
 50f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 513:	48 01 d0             	add    %rdx,%rax
 516:	0f b6 00             	movzbl (%rax),%eax
 519:	84 c0                	test   %al,%al
 51b:	74 09                	je     526 <io_printf+0x57>
 51d:	81 7d fc 00 00 01 00 	cmpl   $0x10000,-0x4(%rbp)
 524:	7e be                	jle    4e4 <io_printf+0x15>
 526:	90                   	nop
 527:	c9                   	leave
 528:	c3                   	ret

0000000000000529 <io_scanf>:
 529:	55                   	push   %rbp
 52a:	48 89 e5             	mov    %rsp,%rbp
 52d:	53                   	push   %rbx
 52e:	48 83 ec 28          	sub    $0x28,%rsp
 532:	89 7d dc             	mov    %edi,-0x24(%rbp)
 535:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 539:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 540:	eb 39                	jmp    57b <io_scanf+0x52>
 542:	8b 45 ec             	mov    -0x14(%rbp),%eax
 545:	48 63 d0             	movslq %eax,%rdx
 548:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 54c:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
 550:	b8 00 00 00 00       	mov    $0x0,%eax
 555:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 55c:	00 00 00 
 55f:	ff d2                	call   *%rdx
 561:	88 03                	mov    %al,(%rbx)
 563:	8b 45 ec             	mov    -0x14(%rbp),%eax
 566:	48 63 d0             	movslq %eax,%rdx
 569:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 56d:	48 01 d0             	add    %rdx,%rax
 570:	0f b6 00             	movzbl (%rax),%eax
 573:	3c 0a                	cmp    $0xa,%al
 575:	74 11                	je     588 <io_scanf+0x5f>
 577:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 57b:	8b 45 dc             	mov    -0x24(%rbp),%eax
 57e:	83 e8 01             	sub    $0x1,%eax
 581:	39 45 ec             	cmp    %eax,-0x14(%rbp)
 584:	7c bc                	jl     542 <io_scanf+0x19>
 586:	eb 01                	jmp    589 <io_scanf+0x60>
 588:	90                   	nop
 589:	8b 45 dc             	mov    -0x24(%rbp),%eax
 58c:	48 98                	cltq
 58e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
 592:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 596:	48 01 d0             	add    %rdx,%rax
 599:	c6 00 00             	movb   $0x0,(%rax)
 59c:	90                   	nop
 59d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 5a1:	c9                   	leave
 5a2:	c3                   	ret

00000000000005a3 <io_hlt>:
 5a3:	55                   	push   %rbp
 5a4:	48 89 e5             	mov    %rsp,%rbp
 5a7:	f4                   	hlt
 5a8:	90                   	nop
 5a9:	5d                   	pop    %rbp
 5aa:	c3                   	ret

00000000000005ab <init_serial>:
 5ab:	55                   	push   %rbp
 5ac:	48 89 e5             	mov    %rsp,%rbp
 5af:	be 00 00 00 00       	mov    $0x0,%esi
 5b4:	bf f9 03 00 00       	mov    $0x3f9,%edi
 5b9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 5c0:	00 00 00 
 5c3:	ff d0                	call   *%rax
 5c5:	be 80 00 00 00       	mov    $0x80,%esi
 5ca:	bf fb 03 00 00       	mov    $0x3fb,%edi
 5cf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 5d6:	00 00 00 
 5d9:	ff d0                	call   *%rax
 5db:	be 03 00 00 00       	mov    $0x3,%esi
 5e0:	bf f8 03 00 00       	mov    $0x3f8,%edi
 5e5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 5ec:	00 00 00 
 5ef:	ff d0                	call   *%rax
 5f1:	be 00 00 00 00       	mov    $0x0,%esi
 5f6:	bf f9 03 00 00       	mov    $0x3f9,%edi
 5fb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 602:	00 00 00 
 605:	ff d0                	call   *%rax
 607:	be 03 00 00 00       	mov    $0x3,%esi
 60c:	bf fb 03 00 00       	mov    $0x3fb,%edi
 611:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 618:	00 00 00 
 61b:	ff d0                	call   *%rax
 61d:	be c7 00 00 00       	mov    $0xc7,%esi
 622:	bf fa 03 00 00       	mov    $0x3fa,%edi
 627:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 62e:	00 00 00 
 631:	ff d0                	call   *%rax
 633:	be 0b 00 00 00       	mov    $0xb,%esi
 638:	bf fc 03 00 00       	mov    $0x3fc,%edi
 63d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 644:	00 00 00 
 647:	ff d0                	call   *%rax
 649:	90                   	nop
 64a:	5d                   	pop    %rbp
 64b:	c3                   	ret

000000000000064c <putc_serial>:
 64c:	55                   	push   %rbp
 64d:	48 89 e5             	mov    %rsp,%rbp
 650:	48 83 ec 08          	sub    $0x8,%rsp
 654:	89 f8                	mov    %edi,%eax
 656:	88 45 fc             	mov    %al,-0x4(%rbp)
 659:	90                   	nop
 65a:	bf fd 03 00 00       	mov    $0x3fd,%edi
 65f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 666:	00 00 00 
 669:	ff d0                	call   *%rax
 66b:	0f b6 c0             	movzbl %al,%eax
 66e:	83 e0 20             	and    $0x20,%eax
 671:	85 c0                	test   %eax,%eax
 673:	74 e5                	je     65a <putc_serial+0xe>
 675:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
 679:	0f b6 c0             	movzbl %al,%eax
 67c:	89 c6                	mov    %eax,%esi
 67e:	bf f8 03 00 00       	mov    $0x3f8,%edi
 683:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 68a:	00 00 00 
 68d:	ff d0                	call   *%rax
 68f:	90                   	nop
 690:	c9                   	leave
 691:	c3                   	ret

0000000000000692 <gets_serial>:
 692:	55                   	push   %rbp
 693:	48 89 e5             	mov    %rsp,%rbp
 696:	48 83 ec 10          	sub    $0x10,%rsp

000000000000069a <check_rx_buffer>:
 69a:	66 ba fd 03          	mov    $0x3fd,%dx
 69e:	ec                   	in     (%dx),%al
 69f:	a8 01                	test   $0x1,%al
 6a1:	74 f7                	je     69a <check_rx_buffer>
 6a3:	66 ba f8 03          	mov    $0x3f8,%dx
 6a7:	ec                   	in     (%dx),%al
 6a8:	88 45 ff             	mov    %al,-0x1(%rbp)
 6ab:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 6af:	c9                   	leave
 6b0:	c3                   	ret

00000000000006b1 <init_hhdm>:
 6b1:	55                   	push   %rbp
 6b2:	48 89 e5             	mov    %rsp,%rbp
 6b5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 6bc:	00 00 00 
 6bf:	48 8b 40 28          	mov    0x28(%rax),%rax
 6c3:	48 8b 40 08          	mov    0x8(%rax),%rax
 6c7:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 6ce:	00 00 00 
 6d1:	48 89 02             	mov    %rax,(%rdx)
 6d4:	90                   	nop
 6d5:	5d                   	pop    %rbp
 6d6:	c3                   	ret

00000000000006d7 <get_physical_memory_offset>:
 6d7:	55                   	push   %rbp
 6d8:	48 89 e5             	mov    %rsp,%rbp
 6db:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 6e2:	00 00 00 
 6e5:	48 8b 00             	mov    (%rax),%rax
 6e8:	5d                   	pop    %rbp
 6e9:	c3                   	ret

00000000000006ea <phys_to_virt>:
 6ea:	55                   	push   %rbp
 6eb:	48 89 e5             	mov    %rsp,%rbp
 6ee:	48 83 ec 08          	sub    $0x8,%rsp
 6f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 6f6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 6fd:	00 00 00 
 700:	48 8b 10             	mov    (%rax),%rdx
 703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 707:	48 01 d0             	add    %rdx,%rax
 70a:	c9                   	leave
 70b:	c3                   	ret

000000000000070c <virt_to_phys>:
 70c:	55                   	push   %rbp
 70d:	48 89 e5             	mov    %rsp,%rbp
 710:	48 83 ec 08          	sub    $0x8,%rsp
 714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 718:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 71f:	00 00 00 
 722:	48 8b 00             	mov    (%rax),%rax
 725:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 729:	48 29 c2             	sub    %rax,%rdx
 72c:	48 89 d0             	mov    %rdx,%rax
 72f:	c9                   	leave
 730:	c3                   	ret

0000000000000731 <init_heap>:
 731:	55                   	push   %rbp
 732:	48 89 e5             	mov    %rsp,%rbp
 735:	48 83 ec 10          	sub    $0x10,%rsp
 739:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 740:	00 00 00 
 743:	48 8b 00             	mov    (%rax),%rax
 746:	48 05 00 f0 c0 03    	add    $0x3c0f000,%rax
 74c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 750:	48 c7 45 f0 00 00 40 	movq   $0x400000,-0x10(%rbp)
 757:	00 
 758:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 760:	48 89 d6             	mov    %rdx,%rsi
 763:	48 89 c7             	mov    %rax,%rdi
 766:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 76d:	00 00 00 
 770:	ff d0                	call   *%rax
 772:	90                   	nop
 773:	c9                   	leave
 774:	c3                   	ret

0000000000000775 <calloc>:
 775:	55                   	push   %rbp
 776:	48 89 e5             	mov    %rsp,%rbp
 779:	48 83 ec 20          	sub    $0x20,%rsp
 77d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 781:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 785:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 789:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
 78e:	48 89 c7             	mov    %rax,%rdi
 791:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 798:	00 00 00 
 79b:	ff d0                	call   *%rax
 79d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 7a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 7a5:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
 7aa:	48 89 c2             	mov    %rax,%rdx
 7ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 7b1:	be 00 00 00 00       	mov    $0x0,%esi
 7b6:	48 89 c7             	mov    %rax,%rdi
 7b9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 7c0:	00 00 00 
 7c3:	ff d0                	call   *%rax
 7c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 7c9:	c9                   	leave
 7ca:	c3                   	ret

00000000000007cb <init_frame>:
 7cb:	55                   	push   %rbp
 7cc:	48 89 e5             	mov    %rsp,%rbp
 7cf:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
 7d3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 7da:	00 00 00 
 7dd:	48 8b 40 28          	mov    0x28(%rax),%rax
 7e1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 7e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 7e9:	48 8b 40 08          	mov    0x8(%rax),%rax
 7ed:	48 83 e8 01          	sub    $0x1,%rax
 7f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 7f5:	eb 4d                	jmp    844 <init_frame+0x79>
 7f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 7fb:	48 8b 40 10          	mov    0x10(%rax),%rax
 7ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 803:	48 c1 e2 03          	shl    $0x3,%rdx
 807:	48 01 d0             	add    %rdx,%rax
 80a:	48 8b 00             	mov    (%rax),%rax
 80d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 811:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 815:	48 8b 40 10          	mov    0x10(%rax),%rax
 819:	48 85 c0             	test   %rax,%rax
 81c:	75 21                	jne    83f <init_frame+0x74>
 81e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 822:	48 8b 10             	mov    (%rax),%rdx
 825:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 829:	48 8b 40 08          	mov    0x8(%rax),%rax
 82d:	48 01 c2             	add    %rax,%rdx
 830:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 837:	00 00 00 
 83a:	48 89 10             	mov    %rdx,(%rax)
 83d:	eb 0c                	jmp    84b <init_frame+0x80>
 83f:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
 844:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 849:	75 ac                	jne    7f7 <init_frame+0x2c>
 84b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 852:	00 00 00 
 855:	48 8b 00             	mov    (%rax),%rax
 858:	48 c1 e8 0c          	shr    $0xc,%rax
 85c:	48 83 c0 07          	add    $0x7,%rax
 860:	48 c1 e8 03          	shr    $0x3,%rax
 864:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 868:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 86f:	00 
 870:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 877:	00 
 878:	eb 47                	jmp    8c1 <init_frame+0xf6>
 87a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 87e:	48 8b 40 10          	mov    0x10(%rax),%rax
 882:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 886:	48 c1 e2 03          	shl    $0x3,%rdx
 88a:	48 01 d0             	add    %rdx,%rax
 88d:	48 8b 00             	mov    (%rax),%rax
 890:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 894:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 898:	48 8b 40 10          	mov    0x10(%rax),%rax
 89c:	48 85 c0             	test   %rax,%rax
 89f:	75 1b                	jne    8bc <init_frame+0xf1>
 8a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8a5:	48 8b 40 08          	mov    0x8(%rax),%rax
 8a9:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
 8ad:	72 0d                	jb     8bc <init_frame+0xf1>
 8af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8b3:	48 8b 00             	mov    (%rax),%rax
 8b6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8ba:	eb 13                	jmp    8cf <init_frame+0x104>
 8bc:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 8c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8c5:	48 8b 40 08          	mov    0x8(%rax),%rax
 8c9:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
 8cd:	72 ab                	jb     87a <init_frame+0xaf>
 8cf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
 8d4:	0f 84 53 01 00 00    	je     a2d <init_frame+0x262>
 8da:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8e1:	00 00 00 
 8e4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 8e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8ec:	48 89 c7             	mov    %rax,%rdi
 8ef:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8f6:	00 00 00 
 8f9:	ff d0                	call   *%rax
 8fb:	48 89 c1             	mov    %rax,%rcx
 8fe:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
 902:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 906:	48 89 ce             	mov    %rcx,%rsi
 909:	48 89 c7             	mov    %rax,%rdi
 90c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 913:	00 00 00 
 916:	ff d0                	call   *%rax
 918:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 91f:	00 
 920:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 927:	00 
 928:	eb 7a                	jmp    9a4 <init_frame+0x1d9>
 92a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 92e:	48 8b 40 10          	mov    0x10(%rax),%rax
 932:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 936:	48 c1 e2 03          	shl    $0x3,%rdx
 93a:	48 01 d0             	add    %rdx,%rax
 93d:	48 8b 00             	mov    (%rax),%rax
 940:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 944:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 948:	48 8b 40 10          	mov    0x10(%rax),%rax
 94c:	48 85 c0             	test   %rax,%rax
 94f:	75 4e                	jne    99f <init_frame+0x1d4>
 951:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 955:	48 8b 00             	mov    (%rax),%rax
 958:	48 c1 e8 0c          	shr    $0xc,%rax
 95c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 960:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 964:	48 8b 40 08          	mov    0x8(%rax),%rax
 968:	48 c1 e8 0c          	shr    $0xc,%rax
 96c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 970:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 974:	48 01 45 e0          	add    %rax,-0x20(%rbp)
 978:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 97c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 980:	48 01 c2             	add    %rax,%rdx
 983:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
 987:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 98b:	b9 01 00 00 00       	mov    $0x1,%ecx
 990:	48 89 c7             	mov    %rax,%rdi
 993:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 99a:	00 00 00 
 99d:	ff d0                	call   *%rax
 99f:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
 9a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 9a8:	48 8b 40 08          	mov    0x8(%rax),%rax
 9ac:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
 9b0:	0f 82 74 ff ff ff    	jb     92a <init_frame+0x15f>
 9b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 9ba:	48 c1 e8 0c          	shr    $0xc,%rax
 9be:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 9c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 9c6:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 9cc:	48 c1 e8 0c          	shr    $0xc,%rax
 9d0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 9d4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 9d8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 9dc:	48 01 d0             	add    %rdx,%rax
 9df:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 9e3:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 9e7:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
 9eb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 9ef:	b9 00 00 00 00       	mov    $0x0,%ecx
 9f4:	48 89 c7             	mov    %rax,%rdi
 9f7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 9fe:	00 00 00 
 a01:	ff d0                	call   *%rax
 a03:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 a0a:	00 00 00 
 a0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 a11:	48 89 42 10          	mov    %rax,0x10(%rdx)
 a15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 a19:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
 a1d:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 a24:	00 00 00 
 a27:	48 89 42 18          	mov    %rax,0x18(%rdx)
 a2b:	eb 01                	jmp    a2e <init_frame+0x263>
 a2d:	90                   	nop
 a2e:	c9                   	leave
 a2f:	c3                   	ret

0000000000000a30 <alloc_frames>:
 a30:	55                   	push   %rbp
 a31:	48 89 e5             	mov    %rsp,%rbp
 a34:	48 83 ec 20          	sub    $0x20,%rsp
 a38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 a3c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 a43:	00 00 00 
 a46:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 a4a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 a52:	ba 01 00 00 00       	mov    $0x1,%edx
 a57:	48 89 ce             	mov    %rcx,%rsi
 a5a:	48 89 c7             	mov    %rax,%rdi
 a5d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 a64:	00 00 00 
 a67:	ff d0                	call   *%rax
 a69:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 a6d:	48 83 7d f0 ff       	cmpq   $0xffffffffffffffff,-0x10(%rbp)
 a72:	75 07                	jne    a7b <alloc_frames+0x4b>
 a74:	b8 00 00 00 00       	mov    $0x0,%eax
 a79:	eb 4f                	jmp    aca <alloc_frames+0x9a>
 a7b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 a7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 a83:	48 01 c2             	add    %rax,%rdx
 a86:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
 a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 a8e:	b9 00 00 00 00       	mov    $0x0,%ecx
 a93:	48 89 c7             	mov    %rax,%rdi
 a96:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 a9d:	00 00 00 
 aa0:	ff d0                	call   *%rax
 aa2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 aa9:	00 00 00 
 aac:	48 8b 40 18          	mov    0x18(%rax),%rax
 ab0:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
 ab4:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 abb:	00 00 00 
 abe:	48 89 42 18          	mov    %rax,0x18(%rdx)
 ac2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 ac6:	48 c1 e0 0c          	shl    $0xc,%rax
 aca:	c9                   	leave
 acb:	c3                   	ret

0000000000000acc <bitmap_init>:
 acc:	55                   	push   %rbp
 acd:	48 89 e5             	mov    %rsp,%rbp
 ad0:	48 83 ec 20          	sub    $0x20,%rsp
 ad4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 ad8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 adc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 ae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 ae4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 ae8:	48 89 10             	mov    %rdx,(%rax)
 aeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 aef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 af6:	00 
 af7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 afb:	48 89 50 08          	mov    %rdx,0x8(%rax)
 aff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 b03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 b07:	be 00 00 00 00       	mov    $0x0,%esi
 b0c:	48 89 c7             	mov    %rax,%rdi
 b0f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 b16:	00 00 00 
 b19:	ff d0                	call   *%rax
 b1b:	90                   	nop
 b1c:	c9                   	leave
 b1d:	c3                   	ret

0000000000000b1e <bitmap_get>:
 b1e:	55                   	push   %rbp
 b1f:	48 89 e5             	mov    %rsp,%rbp
 b22:	48 83 ec 20          	sub    $0x20,%rsp
 b26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 b2a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 b2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 b32:	48 c1 e8 03          	shr    $0x3,%rax
 b36:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 b3a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 b3e:	83 e0 07             	and    $0x7,%eax
 b41:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 b45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 b49:	48 8b 10             	mov    (%rax),%rdx
 b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 b50:	48 01 d0             	add    %rdx,%rax
 b53:	0f b6 00             	movzbl (%rax),%eax
 b56:	0f b6 c0             	movzbl %al,%eax
 b59:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 b5d:	89 d1                	mov    %edx,%ecx
 b5f:	d3 f8                	sar    %cl,%eax
 b61:	83 e0 01             	and    $0x1,%eax
 b64:	c9                   	leave
 b65:	c3                   	ret

0000000000000b66 <bitmap_set>:
 b66:	55                   	push   %rbp
 b67:	48 89 e5             	mov    %rsp,%rbp
 b6a:	48 83 ec 28          	sub    $0x28,%rsp
 b6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 b72:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 b76:	89 55 dc             	mov    %edx,-0x24(%rbp)
 b79:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 b7d:	48 c1 e8 03          	shr    $0x3,%rax
 b81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 b85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 b89:	83 e0 07             	and    $0x7,%eax
 b8c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 b90:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
 b94:	74 3a                	je     bd0 <bitmap_set+0x6a>
 b96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 b9a:	48 8b 10             	mov    (%rax),%rdx
 b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 ba1:	48 01 d0             	add    %rdx,%rax
 ba4:	0f b6 30             	movzbl (%rax),%esi
 ba7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 bab:	ba 01 00 00 00       	mov    $0x1,%edx
 bb0:	89 c1                	mov    %eax,%ecx
 bb2:	48 d3 e2             	shl    %cl,%rdx
 bb5:	48 89 d0             	mov    %rdx,%rax
 bb8:	89 c1                	mov    %eax,%ecx
 bba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 bbe:	48 8b 10             	mov    (%rax),%rdx
 bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 bc5:	48 01 d0             	add    %rdx,%rax
 bc8:	09 ce                	or     %ecx,%esi
 bca:	89 f2                	mov    %esi,%edx
 bcc:	88 10                	mov    %dl,(%rax)
 bce:	eb 3a                	jmp    c0a <bitmap_set+0xa4>
 bd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 bd4:	48 8b 10             	mov    (%rax),%rdx
 bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 bdb:	48 01 d0             	add    %rdx,%rax
 bde:	0f b6 30             	movzbl (%rax),%esi
 be1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 be5:	ba 01 00 00 00       	mov    $0x1,%edx
 bea:	89 c1                	mov    %eax,%ecx
 bec:	48 d3 e2             	shl    %cl,%rdx
 bef:	48 89 d0             	mov    %rdx,%rax
 bf2:	f7 d0                	not    %eax
 bf4:	89 c1                	mov    %eax,%ecx
 bf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 bfa:	48 8b 10             	mov    (%rax),%rdx
 bfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 c01:	48 01 d0             	add    %rdx,%rax
 c04:	21 ce                	and    %ecx,%esi
 c06:	89 f2                	mov    %esi,%edx
 c08:	88 10                	mov    %dl,(%rax)
 c0a:	90                   	nop
 c0b:	c9                   	leave
 c0c:	c3                   	ret

0000000000000c0d <bitmap_set_range>:
 c0d:	55                   	push   %rbp
 c0e:	48 89 e5             	mov    %rsp,%rbp
 c11:	48 83 ec 50          	sub    $0x50,%rsp
 c15:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 c19:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
 c1d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 c21:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
 c24:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 c28:	48 83 c0 07          	add    $0x7,%rax
 c2c:	48 c1 e8 03          	shr    $0x3,%rax
 c30:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 c34:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 c38:	48 c1 e8 03          	shr    $0x3,%rax
 c3c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 c40:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 c44:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
 c48:	0f 83 ef 00 00 00    	jae    d3d <bitmap_set_range+0x130>
 c4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 c52:	48 8b 40 08          	mov    0x8(%rax),%rax
 c56:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
 c5a:	0f 83 dd 00 00 00    	jae    d3d <bitmap_set_range+0x130>
 c60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 c64:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 c68:	eb 22                	jmp    c8c <bitmap_set_range+0x7f>
 c6a:	8b 55 b4             	mov    -0x4c(%rbp),%edx
 c6d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 c71:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 c75:	48 89 ce             	mov    %rcx,%rsi
 c78:	48 89 c7             	mov    %rax,%rdi
 c7b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 c82:	00 00 00 
 c85:	ff d0                	call   *%rax
 c87:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 c8c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 c90:	48 c1 e0 03          	shl    $0x3,%rax
 c94:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 c98:	73 0a                	jae    ca4 <bitmap_set_range+0x97>
 c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 c9e:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
 ca2:	72 c6                	jb     c6a <bitmap_set_range+0x5d>
 ca4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 ca8:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
 cac:	0f 82 8e 00 00 00    	jb     d40 <bitmap_set_range+0x133>
 cb2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 cb6:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
 cba:	72 45                	jb     d01 <bitmap_set_range+0xf4>
 cbc:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
 cc0:	74 09                	je     ccb <bitmap_set_range+0xbe>
 cc2:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
 cc9:	eb 05                	jmp    cd0 <bitmap_set_range+0xc3>
 ccb:	b8 00 00 00 00       	mov    $0x0,%eax
 cd0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 cd4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 cd8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 cdc:	eb 19                	jmp    cf7 <bitmap_set_range+0xea>
 cde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 ce2:	48 8b 10             	mov    (%rax),%rdx
 ce5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 ce9:	48 01 d0             	add    %rdx,%rax
 cec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 cf0:	88 10                	mov    %dl,(%rax)
 cf2:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 cf7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 cfb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
 cff:	72 dd                	jb     cde <bitmap_set_range+0xd1>
 d01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 d05:	48 c1 e0 03          	shl    $0x3,%rax
 d09:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 d0d:	eb 22                	jmp    d31 <bitmap_set_range+0x124>
 d0f:	8b 55 b4             	mov    -0x4c(%rbp),%edx
 d12:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 d16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 d1a:	48 89 ce             	mov    %rcx,%rsi
 d1d:	48 89 c7             	mov    %rax,%rdi
 d20:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 d27:	00 00 00 
 d2a:	ff d0                	call   *%rax
 d2c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 d31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 d35:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
 d39:	72 d4                	jb     d0f <bitmap_set_range+0x102>
 d3b:	eb 04                	jmp    d41 <bitmap_set_range+0x134>
 d3d:	90                   	nop
 d3e:	eb 01                	jmp    d41 <bitmap_set_range+0x134>
 d40:	90                   	nop
 d41:	c9                   	leave
 d42:	c3                   	ret

0000000000000d43 <bitmap_find_range>:
 d43:	55                   	push   %rbp
 d44:	48 89 e5             	mov    %rsp,%rbp
 d47:	48 83 ec 58          	sub    $0x58,%rsp
 d4b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
 d4f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 d53:	89 55 ac             	mov    %edx,-0x54(%rbp)
 d56:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 d5d:	00 
 d5e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 d65:	00 
 d66:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
 d6a:	74 07                	je     d73 <bitmap_find_range+0x30>
 d6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 d71:	eb 05                	jmp    d78 <bitmap_find_range+0x35>
 d73:	b8 00 00 00 00       	mov    $0x0,%eax
 d78:	88 45 df             	mov    %al,-0x21(%rbp)
 d7b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 d82:	00 
 d83:	e9 f1 00 00 00       	jmp    e79 <bitmap_find_range+0x136>
 d88:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 d8c:	48 8b 10             	mov    (%rax),%rdx
 d8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 d93:	48 01 d0             	add    %rdx,%rax
 d96:	0f b6 00             	movzbl (%rax),%eax
 d99:	0f b6 c0             	movzbl %al,%eax
 d9c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 da0:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
 da4:	0f 94 c0             	sete   %al
 da7:	0f b6 c0             	movzbl %al,%eax
 daa:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
 dae:	75 0d                	jne    dbd <bitmap_find_range+0x7a>
 db0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 db7:	00 
 db8:	e9 b7 00 00 00       	jmp    e74 <bitmap_find_range+0x131>
 dbd:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
 dc1:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
 dc5:	75 3f                	jne    e06 <bitmap_find_range+0xc3>
 dc7:	48 83 7d b0 07       	cmpq   $0x7,-0x50(%rbp)
 dcc:	77 0d                	ja     ddb <bitmap_find_range+0x98>
 dce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 dd2:	48 c1 e0 03          	shl    $0x3,%rax
 dd6:	e9 bb 00 00 00       	jmp    e96 <bitmap_find_range+0x153>
 ddb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 de0:	75 0c                	jne    dee <bitmap_find_range+0xab>
 de2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 de6:	48 c1 e0 03          	shl    $0x3,%rax
 dea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 dee:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
 df3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 df7:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
 dfb:	72 77                	jb     e74 <bitmap_find_range+0x131>
 dfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 e01:	e9 90 00 00 00       	jmp    e96 <bitmap_find_range+0x153>
 e06:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 e0d:	00 
 e0e:	eb 5d                	jmp    e6d <bitmap_find_range+0x12a>
 e10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 e14:	89 c2                	mov    %eax,%edx
 e16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 e1a:	89 d1                	mov    %edx,%ecx
 e1c:	48 d3 e8             	shr    %cl,%rax
 e1f:	83 e0 01             	and    $0x1,%eax
 e22:	89 45 cc             	mov    %eax,-0x34(%rbp)
 e25:	8b 45 cc             	mov    -0x34(%rbp),%eax
 e28:	3b 45 ac             	cmp    -0x54(%rbp),%eax
 e2b:	75 33                	jne    e60 <bitmap_find_range+0x11d>
 e2d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 e32:	75 17                	jne    e4b <bitmap_find_range+0x108>
 e34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 e38:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 e3f:	00 
 e40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 e44:	48 01 d0             	add    %rdx,%rax
 e47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 e4b:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 e54:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
 e58:	75 0e                	jne    e68 <bitmap_find_range+0x125>
 e5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 e5e:	eb 36                	jmp    e96 <bitmap_find_range+0x153>
 e60:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 e67:	00 
 e68:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 e6d:	48 83 7d e0 07       	cmpq   $0x7,-0x20(%rbp)
 e72:	76 9c                	jbe    e10 <bitmap_find_range+0xcd>
 e74:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 e79:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 e7d:	48 8b 40 08          	mov    0x8(%rax),%rax
 e81:	48 c1 e8 03          	shr    $0x3,%rax
 e85:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
 e89:	0f 82 f9 fe ff ff    	jb     d88 <bitmap_find_range+0x45>
 e8f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
 e96:	c9                   	leave
 e97:	c3                   	ret
